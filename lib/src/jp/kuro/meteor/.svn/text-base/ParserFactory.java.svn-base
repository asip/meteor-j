package jp.kuro.meteor;

import jp.kuro.meteor.core.html.ParserImpl;

/**
 * パーサファクトリクラス
 * @author Yasumasa Ashida
 * @since 2005/02/24 16:29:25
 */
public final class ParserFactory {
    private Parser pif = null;

    /**
     * パーサファクトリを生成する。マークアップタイプがParserIF.HTMLならHTML用パーサファクトリ、<br>
     * Parser.XHTMLならXHTML用パーサファクトリ、Parser.XMLならXML用パーサファクトリを生成。
     * @param type マークアップタイプ
     * @param path ファイルパス
     * @param encoding 文字エンコーディング
     * @return パーサファクトリ
     */
    public static ParserFactory build(int type, String path, String encoding) {
        ParserFactory psf = new ParserFactory();

        switch (type) {
            case Parser.HTML:
                ParserImpl html = ParserImpl.getParser();
                html.read(path, encoding);
                psf.setParser(html);
                break;
            case Parser.XHTML:
                jp.kuro.meteor.core.xhtml.ParserImpl xhtml = jp.kuro.meteor.core.xhtml.ParserImpl.getParser();
                xhtml.read(path, encoding);
                psf.setParser(xhtml);
                break;
            case Parser.XML:
                jp.kuro.meteor.core.xml.ParserImpl xml = jp.kuro.meteor.core.xml.ParserImpl.getParser();
                xml.read(path, encoding);
                psf.setParser(xml);
                break;
        }

        return psf;

    }

    /**
     * パーサファクトリを生成する。マークアップタイプがParserIF.HTMLならHTML用パーサファクトリ、<br>
     * Parser.XHTMLならXHTML用パーサファクトリ、Parser.XMLならXML用パーサファクトリを生成。
     * @param type マークアップタイプ
     * @param document ドキュメント
     * @return パーサファクトリ
     */
    public static ParserFactory build(int type, String document) {
        ParserFactory psf = new ParserFactory();

        switch (type) {
            case Parser.HTML:
                ParserImpl html = ParserImpl.getParser();
                html.parse(document);
                psf.setParser(html);
                break;
            case Parser.XHTML:
                jp.kuro.meteor.core.xhtml.ParserImpl xhtml = jp.kuro.meteor.core.xhtml.ParserImpl.getParser();
                xhtml.parse(document);
                psf.setParser(xhtml);
                break;
            case Parser.XML:
                jp.kuro.meteor.core.xml.ParserImpl xml = jp.kuro.meteor.core.xml.ParserImpl.getParser();
                xml.parse(document);
                psf.setParser(xml);
                break;
        }

        return psf;

    }

    /**
     * パーサをセットする
     * @param pif  パーサ
     */
    public final void setParser(Parser pif) {
        this.pif = pif;
    }


    /**
     * パーサを取得する
     * @return パーサ
     */
    public final Parser getParser() {
        Parser pif2 = null;

        if (pif instanceof ParserImpl) {
            pif2 = ParserImpl.copy(pif);
        } else if (pif instanceof jp.kuro.meteor.core.xhtml.ParserImpl) {
            pif2 = jp.kuro.meteor.core.xhtml.ParserImpl.copy(pif);
        } else if (pif instanceof jp.kuro.meteor.core.xml.ParserImpl) {
            pif2 = jp.kuro.meteor.core.xml.ParserImpl.copy(pif);
        }

        return pif2;

    }

}
